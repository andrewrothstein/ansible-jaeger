---
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Check for install in {{ jaeger_install_dir }}
  become: true
  ansible.builtin.stat:
    path: '{{ jaeger_install_dir }}'
  changed_when: false
  register: jaeger_binary
- name: Downloading and installing jaeger
  when: not jaeger_binary.stat.exists
  block:
    - name: Downloading {{ jaeger_url }} to {{ jaeger_tmp_tgz }}
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ jaeger_url }}'
        dest: '{{ jaeger_tmp_tgz }}'
        mode: '644'
        checksum: '{{ jaeger_checksum }}'
    - name: Installing andrewrothstein.unarchivedeps
      ansible.builtin.include_role:
        name: andrewrothstein.unarchivedeps
    - name: Unarchiving {{ jaeger_tmp_tgz }} to {{ jaeger_parent_install_dir }}
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ jaeger_tmp_tgz }}'
        dest: '{{ jaeger_parent_install_dir }}'
        creates: '{{ jaeger_install_dir }}'
  always:
    - name: Rm -f {{ jaeger_tmp_tgz }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ jaeger_tmp_tgz }}'
        state: absent
- name: Linking {{ jaeger_link_dir }} to {{ jaeger_install_dir }}
  become: true
  become_user: root
  ansible.builtin.file:
    src: '{{ jaeger_install_dir }}'
    dest: '{{ jaeger_link_dir }}'
    state: link
- name: Linking apps in {{ jaeger_link_dir }} from {{ jaeger_parent_install_dir }}/bin
  become: true
  become_user: root
  with_items: '{{ jaeger_links }}'
  ansible.builtin.file:
    src: '{{ jaeger_link_dir }}/{{ item }}'
    dest: '{{ jaeger_parent_install_dir }}/bin/{{ item }}'
    state: link
